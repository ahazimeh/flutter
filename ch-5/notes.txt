Android:
Material-Design Look / Style
Android Animations ? Route Transitions
Android Fonts
IOS:
Cupertino Look / Style
IOS Animations ? Route Transitions
IOS Fonts

height: (MediaQuery.of(context).size.height - appBar.preferredSize.height - MediaQuery.of(context).padding.top) * 0.4,

// so if the user changed the font size of his mobile
// by default if the user didn't change anything the curScaleFactor will be 1
final curScaleFactor = MediaQuery.of(context).textScaleFactor;
Text('This changes!', style: TextStyle(fontSize: 20 * curScaleFactor));

set size of parent widget
LayoutBuilder(builder: (ctx, constraints) {
// so here it takes 15 % of parent height
constraints.maxHeight * 0.15,

// he used this to calculate the space that the keyboard has taken
padding: EdgeInsets.only(
            top: 10,
            left: 10,
            right: 10,
            bottom: MediaQuery.of(context).viewInsets.bottom + 10,
          )
and this is a link for an improved model bottom sheet
https://stackoverflow.com/questions/53869078/how-to-move-bottomsheet-along-with-keyboard-which-has-textfieldautofocused-is-t/57515977#57515977

to fit with ios devices some elements has adaptive constructor

it is a convention to put all dart imports at the very top, then package then your own imports

import 'dart:io';
Platform.isIOS

for ios you use CupertinoPageScaffold and rather than AppBar use CupertinoNavigationBar

CupertinoIcons rather than Icons
mainAxisSize: MainAxisSize.min, // to let Row gets the minimum size rather than max size

SafeArea widget is necessary for some devices that had some reserved spaces for it in the top

CupertinoApp rather than MaterialApp