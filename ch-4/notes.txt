flutter widget catalog to view available widgets
you can also visit api.flutter.dev and search for available widgets there

Most Important Widgets:
App/Page Setup:
    MaterialApp/CupertinoApp - Scaffold/CupertinoPageScaffold
Layout:
    Container - Raw - Column
Row/Column Children:
    Flexible - Expanded
Content Widgets:
    Stack - Card
Repeat Elements:
    ListView - GridView - ListTitle(you can use it inside list view)
Content Type:
    Text - Images - Icon
User Input:
    TextField - RaisedButton/FlatButton
    invisible widgets to build your own custom user input widgets: GestureDetector - InkWell(partly invisible widget)

Container vs Column/Row:
Container:
    -container: takes exactly one child widget
    -rich alignment & styling options
    -flexible width
    -perfect for custom styling
Column/Row:
    -takes multiple child widgets
    -alignment but no styling options
    -always takes full available height or width
    -must use widgets if widgets sit next to/above each other

string interpolation: ${}

if the package didn't get installed automatically flutter packages get

ListView is a Column with a singleChildScrollView
ListView(children: []) ListView.builder()
for long lists always use ListView.builder because it has more optimizations

Navigator.of(context).pop(); // used to close most screen that is displayed

// show bottom model
void _startAddNewTransaction(BuildContext ctx) {
showModalBottomSheet(
    context: ctx,
    builder: (bCtx) {
        return GestureDetector(
        onTap: () {},
        child: NewTransaction(_addNewTransaction),
        behavior: HitTestBehavior.opaque,
        );
    });
}

to get an idea of how to mix and match colors you can look for material design documentation if you to get an idea for how to mix and match colors and which combinations work


color: Theme.of(context).colorScheme.primary,
fonts:
style: Theme.of(context).textTheme.headline6,

With the latest version of Flutter, some theme identifiers changed.

display4 => headline1;
display3 => headline2;
display2 => headline3;
display1 => headline4;
headline => headline5;
title    => headline6; // used in previous lecture
subhead  => subtitle1;
subtitle => subtitle2;
body2    => bodyText1; // will be used in future lectures
body     => bodyText2; // will be used in future lectures
In case the textTheme doesn't work on the appBarTheme, change the code from

appBarTheme: AppBarTheme(
  textTheme: ThemeData.light().textTheme.copyWith(...)
)
to

appBarTheme: AppBarTheme(
  titleTextStyle: TextStyle(
    fontFamily: 'OpenSans',
    fontSize: 20,
    fontWeight: FontWeight.bold
  )
)

